name: C++ cross-platform CI

on:
  push:
    branches:
      - '*develop*'
      - '*master*'
  pull_request:
    branches:
      - '*develop*'
      - '*master*'

jobs:
  cross_build:
    name: Cross-platform build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      CMAKE_BUILD_TYPE: Release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Ensure CMake (Linux / macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        if ! command -v cmake >/dev/null 2>&1; then
          echo "CMake not found — installing..."
          if [ "$(uname)" = "Darwin" ]; then
            brew update
            brew install cmake
          else
            sudo apt-get update
            sudo apt-get install -y cmake
          fi
        else
          echo "CMake found: $(cmake --version | head -n 1)"
        fi

    - name: Ensure CMake (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        if (-not (Get-Command cmake -ErrorAction SilentlyContinue)) {
          Write-Host 'CMake not found — installing via choco...'
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        } else {
          cmake --version
        }

    - name: Configure (CMake)
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}

    - name: Build
      run: cmake --build build --config ${{ env.CMAKE_BUILD_TYPE }} --parallel

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure -C ${{ env.CMAKE_BUILD_TYPE }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}
        path: |
          build/**
